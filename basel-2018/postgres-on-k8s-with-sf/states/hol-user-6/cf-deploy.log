Using environment 'https://10.0.0.6:25555' as client 'admin'

Using deployment 'cf'

Release 'bpm/0.12.3' already exists.

Release 'capi/1.69.0' already exists.

Release 'cf-mysql/36.15.0' already exists.

Release 'cf-networking/2.16.0' already exists.

Release 'binary-buildpack/1.0.25' already exists.

Release 'cf-smoke-tests/40.0.9' already exists.

Release 'cf-syslog-drain/7.1' already exists.

Release 'cflinuxfs2/1.238.0' already exists.

Release 'consul/196' already exists.

Release 'credhub/1.9.5' already exists.

Release 'dotnet-core-buildpack/2.1.4' already exists.

Release 'diego/2.17.0' already exists.

Release 'go-buildpack/1.8.26' already exists.

Release 'garden-runc/1.16.4' already exists.

Release 'java-buildpack/4.15' already exists.

Release 'nats/26' already exists.

Release 'loggregator/103.2' already exists.

Release 'php-buildpack/4.3.59' already exists.

Release 'nodejs-buildpack/1.6.30' already exists.

Release 'python-buildpack/1.6.20' already exists.

Release 'routing/0.182.0' already exists.

Release 'ruby-buildpack/1.7.22' already exists.

Release 'silk/2.16.0' already exists.

Release 'staticfile-buildpack/1.4.31' already exists.

Release 'statsd-injector/1.3.0' already exists.

Release 'uaa/61.0' already exists.

Release 'loggregator-agent/2.2' already exists.

Release 'bosh-dns-aliases/0.0.3' already exists.

Release 'log-cache/1.4.4' already exists.

Release 'cf-cli/1.8.0' already exists.

  vm_types:
+ - name: default
  
  networks:
  - name: default
    subnets:
    - range: 10.244.0.0/20
      static:
+     - 10.244.0.2 - 10.244.14.254
-     - 10.244.0.2 - 10.244.0.127
-     - 10.244.1.0 - 10.244.1.127
-     - 10.244.2.0 - 10.244.2.127
-     - 10.244.3.0 - 10.244.3.127
  
  disk_types:
+ - disk_size: 1024
+   name: default
  
+ stemcells:
+ - alias: default
+   os: ubuntu-trusty
+   version: '3586.42'
  
  releases:
+ - name: binary-buildpack
+   sha1: 45cb3c91ff51f84d653f7271c3deb140f2349a10
+   url: https://bosh.io/d/github.com/cloudfoundry/binary-buildpack-release?v=1.0.25
+   version: 1.0.25
+ - name: bpm
+   sha1: 313664d2e6d8485ffa0683979a401f7722f63a50
+   url: https://bosh.io/d/github.com/cloudfoundry-incubator/bpm-release?v=0.12.3
+   version: 0.12.3
+ - name: capi
+   sha1: 3bd8102025f26f1ee803d4b6c4b96207081ab381
+   url: https://bosh.io/d/github.com/cloudfoundry/capi-release?v=1.69.0
+   version: 1.69.0
+ - name: cf-mysql
+   sha1: 0764d9d6aae7cefd10019437ed83e7715e614633
+   url: https://bosh.io/d/github.com/cloudfoundry/cf-mysql-release?v=36.15.0
+   version: 36.15.0
+ - name: cf-networking
+   sha1: 9f34333f6a41c66b39fdde1971b03ed466a248d3
+   url: https://bosh.io/d/github.com/cloudfoundry/cf-networking-release?v=2.16.0
+   version: 2.16.0
+ - name: cf-smoke-tests
+   sha1: be3df152b4767115222d63b6081e5e00b6b34f37
+   url: https://bosh.io/d/github.com/cloudfoundry/cf-smoke-tests-release?v=40.0.9
+   version: 40.0.9
+ - name: cf-syslog-drain
+   sha1: 7e9648f44c6513ea5cb84531c9c5d1ae0730f202
+   url: https://bosh.io/d/github.com/cloudfoundry/cf-syslog-drain-release?v=7.1
+   version: '7.1'
+ - name: cflinuxfs2
+   sha1: 353bdf06ded654ab6f1172adac2f53a02febabfd
+   url: https://bosh.io/d/github.com/cloudfoundry/cflinuxfs2-release?v=1.238.0
+   version: 1.238.0
+ - name: consul
+   sha1: 84f149761929e59699d6ac3892b0cd806652c7b8
+   url: https://bosh.io/d/github.com/cloudfoundry-incubator/consul-release?v=196
+   version: '196'
+ - name: credhub
+   sha1: 2390e855f092b0fb9c58f9cb88853ea938e87a3e
+   url: https://bosh.io/d/github.com/pivotal-cf/credhub-release?v=1.9.5
+   version: 1.9.5
+ - name: diego
+   sha1: cb67d79a28a90abafc0a46bd3dfb5bcfd9433868
+   url: https://bosh.io/d/github.com/cloudfoundry/diego-release?v=2.17.0
+   version: 2.17.0
+ - name: dotnet-core-buildpack
+   sha1: dc92805765ed73604d5c542d736aea7bffed8b11
+   url: https://bosh.io/d/github.com/cloudfoundry/dotnet-core-buildpack-release?v=2.1.4
+   version: 2.1.4
+ - name: garden-runc
+   sha1: dd02cad84283fdc282005b78624864e5976de209
+   url: https://bosh.io/d/github.com/cloudfoundry/garden-runc-release?v=1.16.4
+   version: 1.16.4
+ - name: go-buildpack
+   sha1: 2a11862007592ba34e768e7b9544a9698de59a17
+   url: https://bosh.io/d/github.com/cloudfoundry/go-buildpack-release?v=1.8.26
+   version: 1.8.26
+ - name: java-buildpack
+   sha1: 78face238cf11ea5b1f13eebb7b7befcddb365dc
+   url: https://bosh.io/d/github.com/cloudfoundry/java-buildpack-release?v=4.15
+   version: '4.15'
+ - name: loggregator
+   sha1: 1e247c2657fc36194d2e755291097e98a77145b7
+   url: https://bosh.io/d/github.com/cloudfoundry/loggregator-release?v=103.2
+   version: '103.2'
+ - name: nats
+   sha1: 2f2c27acdfff81f3519968921686522518ab5783
+   url: https://bosh.io/d/github.com/cloudfoundry/nats-release?v=26
+   version: '26'
+ - name: nodejs-buildpack
+   sha1: b9d2d4f516a95a3f6de179a829dec4deaa155828
+   url: https://bosh.io/d/github.com/cloudfoundry/nodejs-buildpack-release?v=1.6.30
+   version: 1.6.30
+ - name: php-buildpack
+   sha1: f1c6ebf8538aa6de07055cf919246caad695eb3a
+   url: https://bosh.io/d/github.com/cloudfoundry/php-buildpack-release?v=4.3.59
+   version: 4.3.59
+ - name: python-buildpack
+   sha1: db9ab75edf8d96172d3f15a07799f8faf15b24d7
+   url: https://bosh.io/d/github.com/cloudfoundry/python-buildpack-release?v=1.6.20
+   version: 1.6.20
+ - name: routing
+   sha1: 6e341a527a0dd2c920b54dea82156ae9bc0b29eb
+   url: https://bosh.io/d/github.com/cloudfoundry-incubator/cf-routing-release?v=0.182.0
+   version: 0.182.0
+ - name: ruby-buildpack
+   sha1: 8b2baf552d6f51933fbf37ccacbabbcbd9c7ae6d
+   url: https://bosh.io/d/github.com/cloudfoundry/ruby-buildpack-release?v=1.7.22
+   version: 1.7.22
+ - name: silk
+   sha1: 022d325d412c6af04c426a5c9f8f69556d38a291
+   url: https://bosh.io/d/github.com/cloudfoundry/silk-release?v=2.16.0
+   version: 2.16.0
+ - name: staticfile-buildpack
+   sha1: 7371d1b2b4c1e677e8364ce5e1bc325158796b38
+   url: https://bosh.io/d/github.com/cloudfoundry/staticfile-buildpack-release?v=1.4.31
+   version: 1.4.31
+ - name: statsd-injector
+   sha1: 5b9357484032e5217cead8f20362f5802c751de0
+   url: https://bosh.io/d/github.com/cloudfoundry/statsd-injector-release?v=1.3.0
+   version: 1.3.0
+ - name: uaa
+   sha1: f919a8037334adfc4e219f06ea4335dc28bf1245
+   url: https://bosh.io/d/github.com/cloudfoundry/uaa-release?v=61.0
+   version: '61.0'
+ - name: loggregator-agent
+   sha1: c998634337c826f95247b6da4f1772dcac8bb2b1
+   url: https://bosh.io/d/github.com/cloudfoundry/loggregator-agent-release?v=2.2
+   version: '2.2'
+ - name: log-cache
+   sha1: 34a97ff98e9fbd2b167b4a0f6b7773fe120995f7
+   url: https://bosh.io/d/github.com/cloudfoundry/log-cache-release?v=1.4.4
+   version: 1.4.4
+ - name: bosh-dns-aliases
+   sha1: b0d0a0350ed87f1ded58b2ebb469acea0e026ccc
+   url: https://bosh.io/d/github.com/cloudfoundry/bosh-dns-aliases-release?v=0.0.3
+   version: 0.0.3
+ - name: cf-cli
+   sha1: 15d0718bc82ff9394efd2c9798873a39bf7eba06
+   url: https://bosh.io/d/github.com/bosh-packages/cf-cli-release?v=1.8.0
+   version: 1.8.0
  
+ update:
+   canaries: 1
+   canary_watch_time: 30000-1200000
+   max_in_flight: 1
+   serial: false
+   update_watch_time: 5000-1200000
  
  variables:
+ - name: blobstore_admin_users_password
+   type: password
+ - name: blobstore_secure_link_secret
+   type: password
+ - name: cc_bulk_api_password
+   type: password
+ - name: cc_db_encryption_key
+   type: password
+ - name: cc_internal_api_password
+   type: password
+ - name: cc_staging_upload_password
+   type: password
+ - name: cf_mysql_mysql_admin_password
+   type: password
+ - name: cf_mysql_mysql_cluster_health_password
+   type: password
+ - name: cf_mysql_mysql_galera_healthcheck_endpoint_password
+   type: password
+ - name: cf_mysql_mysql_galera_healthcheck_password
+   type: password
+ - name: cf_mysql_proxy_api_password
+   type: password
+ - name: cc_database_password
+   type: password
+ - name: credhub_database_password
+   type: password
+ - name: diego_database_password
+   type: password
+ - name: uaa_database_password
+   type: password
+ - name: routing_api_database_password
+   type: password
+ - name: network_policy_database_password
+   type: password
+ - name: network_connectivity_database_password
+   type: password
+ - name: uaa_default_encryption_passphrase
+   type: password
+ - name: silk_ca
+   options:
+     common_name: silk-ca
+     is_ca: true
+   type: certificate
+ - name: silk_controller
+   options:
+     ca: silk_ca
+     common_name: silk-controller.service.cf.internal
+     extended_key_usage:
+     - server_auth
+   type: certificate
+ - name: silk_daemon
+   options:
+     ca: silk_ca
+     common_name: silk-daemon
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: network_policy_ca
+   options:
+     common_name: networkPolicyCA
+     is_ca: true
+   type: certificate
+ - name: network_policy_server
+   options:
+     ca: network_policy_ca
+     common_name: policy-server.service.cf.internal
+     extended_key_usage:
+     - server_auth
+   type: certificate
+ - name: network_policy_client
+   options:
+     ca: network_policy_ca
+     common_name: clientName
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: uaa_clients_routing_api_client_secret
+   type: password
+ - name: uaa_clients_tcp_emitter_secret
+   type: password
+ - name: nats_password
+   type: password
+ - name: router_status_password
+   type: password
+ - name: cf_admin_password
+   type: password
+ - name: cf_bosh_password
+   type: password
+ - name: router_route_services_secret
+   type: password
+ - name: uaa_admin_client_secret
+   type: password
+ - name: uaa_clients_cc-routing_secret
+   type: password
+ - name: uaa_clients_cc-service-dashboards_secret
+   type: password
+ - name: uaa_clients_cc_service_key_client_secret
+   type: password
+ - name: uaa_clients_cloud_controller_username_lookup_secret
+   type: password
+ - name: uaa_clients_doppler_secret
+   type: password
+ - name: uaa_clients_gorouter_secret
+   type: password
+ - name: uaa_clients_network_policy_secret
+   type: password
+ - name: uaa_clients_ssh-proxy_secret
+   type: password
+ - name: uaa_clients_tcp_router_secret
+   type: password
+ - name: diego_bbs_encryption_keys_passphrase
+   type: password
+ - name: consul_encrypt_key
+   type: password
+ - name: credhub_encryption_password
+   type: password
+ - name: credhub_admin_client_secret
+   type: password
+ - name: diego_ssh_proxy_host_key
+   type: ssh
+ - name: uaa_jwt_signing_key
+   type: rsa
+ - name: service_cf_internal_ca
+   options:
+     common_name: internalCA
+     is_ca: true
+   type: certificate
+ - name: blobstore_tls
+   options:
+     ca: service_cf_internal_ca
+     common_name: blobstore.service.cf.internal
+   type: certificate
+ - name: consul_agent_ca
+   options:
+     common_name: consulCA
+     is_ca: true
+   type: certificate
+ - name: consul_agent
+   options:
+     alternative_names:
+     - 127.0.0.1
+     ca: consul_agent_ca
+     common_name: consul_agent
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: consul_server
+   options:
+     ca: consul_agent_ca
+     common_name: server.dc1.cf.internal
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: diego_auctioneer_client
+   options:
+     ca: service_cf_internal_ca
+     common_name: auctioneer client
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: diego_auctioneer_server
+   options:
+     alternative_names:
+     - "*.auctioneer.service.cf.internal"
+     - auctioneer.service.cf.internal
+     ca: service_cf_internal_ca
+     common_name: auctioneer.service.cf.internal
+     extended_key_usage:
+     - server_auth
+   type: certificate
+ - name: diego_bbs_client
+   options:
+     ca: service_cf_internal_ca
+     common_name: bbs client
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: diego_bbs_server
+   options:
+     alternative_names:
+     - "*.bbs.service.cf.internal"
+     - bbs.service.cf.internal
+     ca: service_cf_internal_ca
+     common_name: bbs.service.cf.internal
+     extended_key_usage:
+     - server_auth
+     - client_auth
+   type: certificate
+ - name: diego_rep_client
+   options:
+     ca: service_cf_internal_ca
+     common_name: rep client
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: diego_rep_agent_v2
+   options:
+     alternative_names:
+     - "*.cell.service.cf.internal"
+     - cell.service.cf.internal
+     - 127.0.0.1
+     - localhost
+     ca: service_cf_internal_ca
+     common_name: cell.service.cf.internal
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: loggregator_ca
+   options:
+     common_name: loggregatorCA
+     is_ca: true
+   type: certificate
+ - name: loggregator_tls_statsdinjector
+   options:
+     ca: loggregator_ca
+     common_name: statsdinjector
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: loggregator_tls_agent
+   options:
+     ca: loggregator_ca
+     common_name: metron
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: loggregator_tls_doppler
+   options:
+     ca: loggregator_ca
+     common_name: doppler
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: loggregator_tls_tc
+   options:
+     ca: loggregator_ca
+     common_name: trafficcontroller
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: loggregator_tls_cc_tc
+   options:
+     ca: service_cf_internal_ca
+     common_name: trafficcontroller
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: loggregator_rlp_gateway_tls_cc
+   options:
+     ca: service_cf_internal_ca
+     common_name: rlp-gateway
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: loggregator_tls_rlp
+   options:
+     ca: loggregator_ca
+     common_name: reverselogproxy
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: loggregator_rlp_gateway
+   options:
+     ca: loggregator_ca
+     common_name: rlp_gateway
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: adapter_rlp_tls
+   options:
+     ca: loggregator_ca
+     common_name: ss-adapter-rlp
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: scheduler_api_tls
+   options:
+     ca: service_cf_internal_ca
+     common_name: ss-scheduler
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: adapter_tls
+   options:
+     ca: loggregator_ca
+     common_name: ss-adapter
+     extended_key_usage:
+     - server_auth
+     - client_auth
+   type: certificate
+ - name: scheduler_client_tls
+   options:
+     ca: loggregator_ca
+     common_name: ss-scheduler
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: logs_provider
+   options:
+     ca: loggregator_ca
+     common_name: log-cache
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: log_cache_ca
+   options:
+     common_name: log-cache
+     is_ca: true
+   type: certificate
+ - name: log_cache
+   options:
+     alternative_names:
+     - log_cache
+     - log-cache
+     - logcache
+     ca: log_cache_ca
+     common_name: log-cache
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: log_cache_tls_cc_auth_proxy
+   options:
+     ca: service_cf_internal_ca
+     common_name: log-cache
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: router_ca
+   options:
+     common_name: routerCA
+     is_ca: true
+   type: certificate
+ - name: router_ssl
+   options:
+     alternative_names:
+     - bosh-lite.com
+     - "*.bosh-lite.com"
+     ca: router_ca
+     common_name: routerSSL
+   type: certificate
+ - name: uaa_ca
+   options:
+     common_name: uaaCA
+     is_ca: true
+   type: certificate
+ - name: uaa_ssl
+   options:
+     alternative_names:
+     - uaa.service.cf.internal
+     ca: uaa_ca
+     common_name: uaa.service.cf.internal
+   type: certificate
+ - name: uaa_login_saml
+   options:
+     ca: uaa_ca
+     common_name: uaa_login_saml
+   type: certificate
+ - name: cc_tls
+   options:
+     ca: service_cf_internal_ca
+     common_name: cloud-controller-ng.service.cf.internal
+     extended_key_usage:
+     - client_auth
+     - server_auth
+   type: certificate
+ - name: cc_public_tls
+   options:
+     alternative_names:
+     - api.bosh-lite.com
+     - cloud-controller-ng.service.cf.internal
+     ca: service_cf_internal_ca
+     common_name: api.bosh-lite.com
+   type: certificate
+ - name: cc_bridge_tps
+   options:
+     ca: service_cf_internal_ca
+     common_name: tps_watcher
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: cc_bridge_cc_uploader
+   options:
+     ca: service_cf_internal_ca
+     common_name: cc_uploader
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: cc_bridge_cc_uploader_server
+   options:
+     ca: service_cf_internal_ca
+     common_name: cc-uploader.service.cf.internal
+     extended_key_usage:
+     - server_auth
+   type: certificate
+ - name: diego_locket_server
+   options:
+     alternative_names:
+     - "*.locket.service.cf.internal"
+     - locket.service.cf.internal
+     ca: service_cf_internal_ca
+     common_name: locket.service.cf.internal
+     extended_key_usage:
+     - server_auth
+   type: certificate
+ - name: diego_locket_client
+   options:
+     ca: service_cf_internal_ca
+     common_name: locket client
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: locket_database_password
+   type: password
+ - name: application_ca
+   options:
+     common_name: appRootCA
+     is_ca: true
+   type: certificate
+ - name: diego_instance_identity_ca
+   options:
+     ca: application_ca
+     common_name: instanceIdentityCA
+     is_ca: true
+   type: certificate
+ - name: gorouter_backend_tls
+   options:
+     alternative_names:
+     - gorouter.service.cf.internal
+     ca: service_cf_internal_ca
+     common_name: gorouter_backend_tls
+     extended_key_usage:
+     - client_auth
+   type: certificate
+ - name: credhub_ca
+   options:
+     common_name: credhubServerCa
+     is_ca: true
+   type: certificate
+ - name: credhub_tls
+   options:
+     alternative_names:
+     - credhub.service.cf.internal
+     - credhub.bosh-lite.com
+     ca: credhub_ca
+     common_name: credhub.bosh-lite.com
+   type: certificate
  
+ instance_groups:
+ - azs:
+   - z1
+   instances: 1
+   jobs:
+   - name: smoke_tests
+     properties:
+       smoke_tests:
+         api: "<redacted>"
+         apps_domain: "<redacted>"
+         cf_dial_timeout_in_seconds: "<redacted>"
+         org: "<redacted>"
+         password: "<redacted>"
+         skip_ssl_validation: "<redacted>"
+         space: "<redacted>"
+         user: "<redacted>"
+     release: cf-smoke-tests
+   - name: cf-cli-6-linux
+     release: cf-cli
+   lifecycle: errand
+   name: smoke-tests
+   networks:
+   - name: default
+   stemcell: default
+   update:
+     serial: true
+   vm_type: minimal
+ - azs:
+   - z1
+   - z2
+   - z3
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server:
+         from: consul_server_link
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           domain: "<redacted>"
+           mode: "<redacted>"
+         agent_cert: "<redacted>"
+         agent_key: "<redacted>"
+         ca_cert: "<redacted>"
+         encrypt_keys:
+         - "<redacted>"
+         server_cert: "<redacted>"
+         server_key: "<redacted>"
+     provides:
+       consul_client:
+         as: consul_client_link
+         shared: true
+       consul_common:
+         as: consul_common_link
+         shared: true
+       consul_server:
+         as: consul_server_link
+         shared: true
+     release: consul
+   name: consul
+   networks:
+   - name: default
+   persistent_disk_type: 5GB
+   stemcell: default
+   update:
+     serial: true
+   vm_type: minimal
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     release: consul
+   - name: nats
+     properties:
+       nats:
+         password: "<redacted>"
+         user: "<redacted>"
+     provides:
+       nats:
+         as: nats
+         shared: true
+     release: nats
+   name: nats
+   networks:
+   - name: default
+   stemcell: default
+   vm_type: minimal
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     release: consul
+   - name: adapter
+     properties:
+       scalablesyslog:
+         adapter:
+           logs:
+             addr: "<redacted>"
+           tls:
+             ca: "<redacted>"
+             cert: "<redacted>"
+             cn: "<redacted>"
+             key: "<redacted>"
+         adapter_rlp:
+           tls:
+             ca: "<redacted>"
+             cert: "<redacted>"
+             cn: "<redacted>"
+             key: "<redacted>"
+     release: cf-syslog-drain
+   name: adapter
+   networks:
+   - name: default
+   stemcell: default
+   vm_type: minimal
+ - azs:
+   - z1
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           services:
+             sql-db:
+               check:
+                 http: "<redacted>"
+                 interval: "<redacted>"
+     release: consul
+   - name: mysql
+     properties:
+       cf_mysql:
+         mysql:
+           admin_password: "<redacted>"
+           binlog_enabled: "<redacted>"
+           cluster_health:
+             password: "<redacted>"
+           galera_healthcheck:
+             db_password: "<redacted>"
+             endpoint_password: "<redacted>"
+             endpoint_username: "<redacted>"
+           port: "<redacted>"
+           seeded_databases:
+           - name: "<redacted>"
+             password: "<redacted>"
+             username: "<redacted>"
+           - name: "<redacted>"
+             password: "<redacted>"
+             username: "<redacted>"
+           - name: "<redacted>"
+             password: "<redacted>"
+             username: "<redacted>"
+           - name: "<redacted>"
+             password: "<redacted>"
+             username: "<redacted>"
+           - name: "<redacted>"
+             password: "<redacted>"
+             username: "<redacted>"
+           - name: "<redacted>"
+             password: "<redacted>"
+             username: "<redacted>"
+           - name: "<redacted>"
+             password: "<redacted>"
+             username: "<redacted>"
+           - name: "<redacted>"
+             password: "<redacted>"
+             username: "<redacted>"
+     release: cf-mysql
+   - name: proxy
+     properties:
+       cf_mysql:
+         proxy:
+           api_password: "<redacted>"
+     release: cf-mysql
+   migrated_from:
+   - name: mysql
+   - name: singleton-database
+   name: database
+   networks:
+   - name: default
+   persistent_disk_type: 10GB
+   stemcell: default
+   update:
+     serial: true
+   vm_type: small
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           services:
+             silk-controller:
+               name: "<redacted>"
+     release: consul
+   - name: cfdot
+     properties:
+       tls:
+         ca_certificate: "<redacted>"
+         certificate: "<redacted>"
+         private_key: "<redacted>"
+     release: diego
+   - name: bbs
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       diego:
+         bbs:
+           active_key_label: "<redacted>"
+           auctioneer:
+             ca_cert: "<redacted>"
+             client_cert: "<redacted>"
+             client_key: "<redacted>"
+           ca_cert: "<redacted>"
+           detect_consul_cell_registrations: "<redacted>"
+           encryption_keys:
+           - label: "<redacted>"
+             passphrase: "<redacted>"
+           rep:
+             ca_cert: "<redacted>"
+             client_cert: "<redacted>"
+             client_key: "<redacted>"
+             require_tls: "<redacted>"
+           server_cert: "<redacted>"
+           server_key: "<redacted>"
+           skip_consul_lock: "<redacted>"
+           sql:
+             db_driver: "<redacted>"
+             db_host: "<redacted>"
+             db_password: "<redacted>"
+             db_port: "<redacted>"
+             db_schema: "<redacted>"
+             db_username: "<redacted>"
+       logging:
+         format:
+           timestamp: "<redacted>"
+       loggregator:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+         use_v2_api: "<redacted>"
+       set_kernel_parameters: "<redacted>"
+     release: diego
+   - name: silk-controller
+     properties:
+       ca_cert: "<redacted>"
+       database:
+         host: "<redacted>"
+         name: "<redacted>"
+         password: "<redacted>"
+         port: "<redacted>"
+         type: "<redacted>"
+         username: "<redacted>"
+       server_cert: "<redacted>"
+       server_key: "<redacted>"
+       silk_daemon:
+         ca_cert: "<redacted>"
+         client_cert: "<redacted>"
+         client_key: "<redacted>"
+     release: silk
+   - name: locket
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       diego:
+         locket:
+           sql:
+             db_driver: "<redacted>"
+             db_host: "<redacted>"
+             db_password: "<redacted>"
+             db_port: "<redacted>"
+             db_schema: "<redacted>"
+             db_username: "<redacted>"
+       logging:
+         format:
+           timestamp: "<redacted>"
+       loggregator:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+         use_v2_api: "<redacted>"
+       set_kernel_parameters: "<redacted>"
+       tls:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+     release: diego
+   migrated_from:
+   - name: diego-bbs
+   name: diego-api
+   networks:
+   - name: default
+   stemcell: default
+   update:
+     serial: true
+   vm_type: small
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           services:
+             uaa: {}
+     release: consul
+   - name: uaa
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       encryption:
+         active_key_label: "<redacted>"
+         encryption_keys:
+         - label: "<redacted>"
+           passphrase: "<redacted>"
+       login:
+         saml:
+           activeKeyId: "<redacted>"
+           keys:
+             key-1:
+               certificate: "<redacted>"
+               key: "<redacted>"
+               passphrase: "<redacted>"
+       uaa:
+         admin:
+           client_secret: "<redacted>"
+         clients:
+           cc-service-dashboards:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             scope: "<redacted>"
+             secret: "<redacted>"
+           cc_routing:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             secret: "<redacted>"
+           cc_service_key_client:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             secret: "<redacted>"
+           cf:
+             access-token-validity: "<redacted>"
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             override: "<redacted>"
+             refresh-token-validity: "<redacted>"
+             scope: "<redacted>"
+             secret: "<redacted>"
+           cloud_controller_username_lookup:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             secret: "<redacted>"
+           credhub_admin_client:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             secret: "<redacted>"
+           doppler:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             override: "<redacted>"
+             secret: "<redacted>"
+           gorouter:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             secret: "<redacted>"
+           network-policy:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             secret: "<redacted>"
+           routing_api_client:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             secret: "<redacted>"
+           ssh-proxy:
+             authorized-grant-types: "<redacted>"
+             autoapprove: "<redacted>"
+             override: "<redacted>"
+             redirect-uri: "<redacted>"
+             scope: "<redacted>"
+             secret: "<redacted>"
+           tcp_emitter:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             secret: "<redacted>"
+           tcp_router:
+             authorities: "<redacted>"
+             authorized-grant-types: "<redacted>"
+             secret: "<redacted>"
+         jwt:
+           policy:
+             active_key_id: "<redacted>"
+             keys:
+               key-1:
+                 signingKey: "<redacted>"
+         logging_level: "<redacted>"
+         scim:
+           users:
+           - groups:
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             name: "<redacted>"
+             password: "<redacted>"
+           - groups:
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             name: "<redacted>"
+             password: "<redacted>"
+         sslCertificate: "<redacted>"
+         sslPrivateKey: "<redacted>"
+         url: "<redacted>"
+         zones:
+           internal:
+             hostnames:
+             - "<redacted>"
+       uaadb:
+         databases:
+         - name: "<redacted>"
+           tag: "<redacted>"
+         db_scheme: "<redacted>"
+         port: "<redacted>"
+         roles:
+         - name: "<redacted>"
+           password: "<redacted>"
+           tag: "<redacted>"
+     release: uaa
+   - name: route_registrar
+     properties:
+       route_registrar:
+         routes:
+         - health_check:
+             name: "<redacted>"
+             script_path: "<redacted>"
+           name: "<redacted>"
+           port: "<redacted>"
+           registration_interval: "<redacted>"
+           tags:
+             component: "<redacted>"
+           uris:
+           - "<redacted>"
+           - "<redacted>"
+           - "<redacted>"
+           - "<redacted>"
+     release: routing
+   - name: statsd_injector
+     properties:
+       loggregator:
+         tls:
+           ca_cert: "<redacted>"
+           statsd_injector:
+             cert: "<redacted>"
+             key: "<redacted>"
+     release: statsd-injector
+   name: uaa
+   networks:
+   - name: default
+   stemcell: default
+   vm_type: minimal
+ - azs:
+   - z1
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           services:
+             blobstore: {}
+     release: consul
+   - name: blobstore
+     properties:
+       blobstore:
+         admin_users:
+         - password: "<redacted>"
+           username: "<redacted>"
+         secure_link:
+           secret: "<redacted>"
+         tls:
+           cert: "<redacted>"
+           private_key: "<redacted>"
+       bpm:
+         enabled: "<redacted>"
+       system_domain: "<redacted>"
+     release: capi
+   - name: route_registrar
+     properties:
+       route_registrar:
+         routes:
+         - name: "<redacted>"
+           port: "<redacted>"
+           registration_interval: "<redacted>"
+           tags:
+             component: "<redacted>"
+           uris:
+           - "<redacted>"
+     release: routing
+   migrated_from:
+   - name: blobstore
+   name: singleton-blobstore
+   networks:
+   - name: default
+   persistent_disk_type: 100GB
+   stemcell: default
+   update:
+     serial: true
+   vm_type: small
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           services:
+             cloud_controller_ng: {}
+             policy-server-internal:
+               name: "<redacted>"
+             routing-api: {}
+     release: consul
+   - name: cloud_controller_ng
+     properties:
+       app_domains:
+       - "<redacted>"
+       app_ssh:
+         host_key_fingerprint: "<redacted>"
+       bpm:
+         enabled: "<redacted>"
+       cc:
+         buildpacks:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         bulk_api_password: "<redacted>"
+         database_encryption:
+           current_key_label: "<redacted>"
+           keys:
+             encryption_key_0: "<redacted>"
+         db_encryption_key: "<redacted>"
+         default_app_memory: "<redacted>"
+         default_running_security_groups:
+         - "<redacted>"
+         - "<redacted>"
+         - "<redacted>"
+         default_staging_security_groups:
+         - "<redacted>"
+         - "<redacted>"
+         droplets:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         install_buildpacks:
+         - name: "<redacted>"
+           package: "<redacted>"
+         - name: "<redacted>"
+           package: "<redacted>"
+         - name: "<redacted>"
+           package: "<redacted>"
+         - name: "<redacted>"
+           package: "<redacted>"
+         - name: "<redacted>"
+           package: "<redacted>"
+         - name: "<redacted>"
+           package: "<redacted>"
+         - name: "<redacted>"
+           package: "<redacted>"
+         - name: "<redacted>"
+           package: "<redacted>"
+         - name: "<redacted>"
+           package: "<redacted>"
+         internal_api_password: "<redacted>"
+         mutual_tls:
+           ca_cert: "<redacted>"
+           private_key: "<redacted>"
+           public_cert: "<redacted>"
+         packages:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         public_tls:
+           ca_cert: "<redacted>"
+           certificate: "<redacted>"
+           private_key: "<redacted>"
+         resource_pool:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         security_group_definitions:
+         - name: "<redacted>"
+           rules:
+           - destination: "<redacted>"
+             protocol: "<redacted>"
+           - destination: "<redacted>"
+             protocol: "<redacted>"
+           - destination: "<redacted>"
+             protocol: "<redacted>"
+           - destination: "<redacted>"
+             protocol: "<redacted>"
+           - destination: "<redacted>"
+             protocol: "<redacted>"
+         - name: "<redacted>"
+           rules:
+           - destination: "<redacted>"
+             ports: "<redacted>"
+             protocol: "<redacted>"
+           - destination: "<redacted>"
+             ports: "<redacted>"
+             protocol: "<redacted>"
+         - name: "<redacted>"
+           rules:
+           - destination: "<redacted>"
+             protocol: "<redacted>"
+         stacks:
+         - description: "<redacted>"
+           name: "<redacted>"
+         staging_upload_password: "<redacted>"
+         staging_upload_user: "<redacted>"
+       ccdb:
+         databases:
+         - name: "<redacted>"
+           tag: "<redacted>"
+         db_scheme: "<redacted>"
+         port: "<redacted>"
+         roles:
+         - name: "<redacted>"
+           password: "<redacted>"
+           tag: "<redacted>"
+       credhub_api:
+         ca_cert: "<redacted>"
+       router:
+         route_services_secret: "<redacted>"
+       routing_api:
+         enabled: "<redacted>"
+       ssl:
+         skip_cert_verify: "<redacted>"
+       system_domain: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         clients:
+           cc-service-dashboards:
+             secret: "<redacted>"
+           cc_routing:
+             secret: "<redacted>"
+           cc_service_key_client:
+             secret: "<redacted>"
+           cloud_controller_username_lookup:
+             secret: "<redacted>"
+         url: "<redacted>"
+     provides:
+       cloud_controller:
+         as: cloud_controller
+         shared: true
+     release: capi
+   - name: binary-buildpack
+     release: binary-buildpack
+   - name: dotnet-core-buildpack
+     release: dotnet-core-buildpack
+   - name: go-buildpack
+     release: go-buildpack
+   - name: java-buildpack
+     release: java-buildpack
+   - name: nodejs-buildpack
+     release: nodejs-buildpack
+   - name: php-buildpack
+     release: php-buildpack
+   - name: python-buildpack
+     release: python-buildpack
+   - name: ruby-buildpack
+     release: ruby-buildpack
+   - name: staticfile-buildpack
+     release: staticfile-buildpack
+   - name: route_registrar
+     properties:
+       route_registrar:
+         routes:
+         - health_check:
+             name: "<redacted>"
+             script_path: "<redacted>"
+             timeout: "<redacted>"
+           name: "<redacted>"
+           port: "<redacted>"
+           registration_interval: "<redacted>"
+           server_cert_domain_san: "<redacted>"
+           tags:
+             component: "<redacted>"
+           tls_port: "<redacted>"
+           uris:
+           - "<redacted>"
+         - name: "<redacted>"
+           port: "<redacted>"
+           registration_interval: "<redacted>"
+           uris:
+           - "<redacted>"
+     release: routing
+   - name: statsd_injector
+     properties:
+       loggregator:
+         tls:
+           ca_cert: "<redacted>"
+           statsd_injector:
+             cert: "<redacted>"
+             key: "<redacted>"
+     release: statsd-injector
+   - name: file_server
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       logging:
+         format:
+           timestamp: "<redacted>"
+       loggregator:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+         use_v2_api: "<redacted>"
+       set_kernel_parameters: "<redacted>"
+     release: diego
+   - name: routing-api
+     properties:
+       routing_api:
+         locket:
+           api_location: "<redacted>"
+           ca_cert: "<redacted>"
+           client_cert: "<redacted>"
+           client_key: "<redacted>"
+         router_groups:
+         - name: "<redacted>"
+           reservable_ports: "<redacted>"
+           type: "<redacted>"
+         skip_consul_lock: "<redacted>"
+         sqldb:
+           host: "<redacted>"
+           password: "<redacted>"
+           port: "<redacted>"
+           schema: "<redacted>"
+           type: "<redacted>"
+           username: "<redacted>"
+         system_domain: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         tls_port: "<redacted>"
+     release: routing
+   - name: policy-server
+     properties:
+       database:
+         host: "<redacted>"
+         name: "<redacted>"
+         password: "<redacted>"
+         port: "<redacted>"
+         type: "<redacted>"
+         username: "<redacted>"
+       uaa_ca: "<redacted>"
+       uaa_client_secret: "<redacted>"
+     release: cf-networking
+   - name: policy-server-internal
+     properties:
+       ca_cert: "<redacted>"
+       server_cert: "<redacted>"
+       server_key: "<redacted>"
+     release: cf-networking
+   - name: cc_uploader
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       capi:
+         cc_uploader:
+           cc:
+             ca_cert: "<redacted>"
+             client_cert: "<redacted>"
+             client_key: "<redacted>"
+           mutual_tls:
+             ca_cert: "<redacted>"
+             server_cert: "<redacted>"
+             server_key: "<redacted>"
+     release: capi
+   name: api
+   networks:
+   - name: default
+   stemcell: default
+   vm_extensions:
+   - 50GB_ephemeral_disk
+   vm_type: small
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     release: consul
+   - name: cloud_controller_worker
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       cc:
+         buildpacks:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         database_encryption:
+           current_key_label: "<redacted>"
+           keys:
+             encryption_key_0: "<redacted>"
+         db_encryption_key: "<redacted>"
+         droplets:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         internal_api_password: "<redacted>"
+         mutual_tls:
+           ca_cert: "<redacted>"
+           private_key: "<redacted>"
+           public_cert: "<redacted>"
+         packages:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         resource_pool:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         staging_upload_password: "<redacted>"
+         staging_upload_user: "<redacted>"
+       ccdb:
+         databases:
+         - name: "<redacted>"
+           tag: "<redacted>"
+         db_scheme: "<redacted>"
+         port: "<redacted>"
+         roles:
+         - name: "<redacted>"
+           password: "<redacted>"
+           tag: "<redacted>"
+       routing_api:
+         enabled: "<redacted>"
+       ssl:
+         skip_cert_verify: "<redacted>"
+       system_domain: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         clients:
+           cc-service-dashboards:
+             secret: "<redacted>"
+           cc_routing:
+             secret: "<redacted>"
+     release: capi
+   name: cc-worker
+   networks:
+   - name: default
+   stemcell: default
+   vm_type: minimal
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           services:
+             gorouter: {}
+     release: consul
+   - name: gorouter
+     properties:
+       router:
+         backends:
+           cert_chain: "<redacted>"
+           enable_tls: "<redacted>"
+           private_key: "<redacted>"
+         ca_certs: "<redacted>"
+         enable_ssl: "<redacted>"
+         route_services_secret: "<redacted>"
+         status:
+           password: "<redacted>"
+           user: "<redacted>"
+         tls_pem:
+         - cert_chain: "<redacted>"
+           private_key: "<redacted>"
+         tracing:
+           enable_zipkin: "<redacted>"
+       routing_api:
+         enabled: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         clients:
+           gorouter:
+             secret: "<redacted>"
+         ssl:
+           port: "<redacted>"
+     release: routing
+   - name: ssh_proxy
+     properties:
+       diego:
+         ssh_proxy:
+           bbs:
+             ca_cert: "<redacted>"
+             client_cert: "<redacted>"
+             client_key: "<redacted>"
+           enable_cf_auth: "<redacted>"
+           host_key: "<redacted>"
+           uaa_secret: "<redacted>"
+         ssl:
+           skip_cert_verify: "<redacted>"
+       logging:
+         format:
+           timestamp: "<redacted>"
+       loggregator:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+         use_v2_api: "<redacted>"
+     release: diego
+   name: router
+   networks:
+   - name: default
+     static_ips:
+     - 10.244.0.34
+   stemcell: default
+   update:
+     serial: true
+   vm_extensions:
+   - ssh-proxy-and-router-lb
+   vm_type: minimal
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     release: consul
+   - name: tcp_router
+     properties:
+       tcp_router:
+         oauth_secret: "<redacted>"
+         router_group: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         tls_port: "<redacted>"
+     release: routing
+   name: tcp-router
+   networks:
+   - name: default
+   stemcell: default
+   vm_extensions:
+   - cf-tcp-router-network-properties
+   vm_type: minimal
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     release: consul
+   - name: cfdot
+     properties:
+       tls:
+         ca_certificate: "<redacted>"
+         certificate: "<redacted>"
+         private_key: "<redacted>"
+     release: diego
+   - name: auctioneer
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       diego:
+         auctioneer:
+           bbs:
+             ca_cert: "<redacted>"
+             client_cert: "<redacted>"
+             client_key: "<redacted>"
+           ca_cert: "<redacted>"
+           rep:
+             ca_cert: "<redacted>"
+             client_cert: "<redacted>"
+             client_key: "<redacted>"
+             require_tls: "<redacted>"
+           server_cert: "<redacted>"
+           server_key: "<redacted>"
+           skip_consul_lock: "<redacted>"
+       logging:
+         format:
+           timestamp: "<redacted>"
+       loggregator:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+         use_v2_api: "<redacted>"
+     release: diego
+   - name: cloud_controller_clock
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       cc:
+         buildpacks:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         database_encryption:
+           current_key_label: "<redacted>"
+           keys:
+             encryption_key_0: "<redacted>"
+         db_encryption_key: "<redacted>"
+         droplets:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         internal_api_password: "<redacted>"
+         mutual_tls:
+           ca_cert: "<redacted>"
+           private_key: "<redacted>"
+           public_cert: "<redacted>"
+         packages:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         resource_pool:
+           blobstore_type: "<redacted>"
+           webdav_config:
+             blobstore_timeout: "<redacted>"
+             ca_cert: "<redacted>"
+             password: "<redacted>"
+             private_endpoint: "<redacted>"
+             public_endpoint: "<redacted>"
+             username: "<redacted>"
+         staging_upload_password: "<redacted>"
+         staging_upload_user: "<redacted>"
+       ccdb:
+         databases:
+         - name: "<redacted>"
+           tag: "<redacted>"
+         db_scheme: "<redacted>"
+         port: "<redacted>"
+         roles:
+         - name: "<redacted>"
+           password: "<redacted>"
+           tag: "<redacted>"
+       routing_api:
+         enabled: "<redacted>"
+       system_domain: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         clients:
+           cc-service-dashboards:
+             secret: "<redacted>"
+           cc_routing:
+             secret: "<redacted>"
+         ssl:
+           port: "<redacted>"
+     release: capi
+   - name: statsd_injector
+     properties:
+       loggregator:
+         tls:
+           ca_cert: "<redacted>"
+           statsd_injector:
+             cert: "<redacted>"
+             key: "<redacted>"
+     release: statsd-injector
+   - name: tps
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       capi:
+         tps:
+           bbs:
+             ca_cert: "<redacted>"
+             client_cert: "<redacted>"
+             client_key: "<redacted>"
+           cc:
+             ca_cert: "<redacted>"
+             client_cert: "<redacted>"
+             client_key: "<redacted>"
+           listener_enabled: "<redacted>"
+           watcher:
+             locket:
+               api_location: "<redacted>"
+             skip_consul_lock: "<redacted>"
+     release: capi
+   - name: scheduler
+     properties:
+       scalablesyslog:
+         scheduler:
+           api:
+             url: "<redacted>"
+           tls:
+             api:
+               ca: "<redacted>"
+               cert: "<redacted>"
+               cn: "<redacted>"
+               key: "<redacted>"
+             client:
+               adapter_cn: "<redacted>"
+               ca: "<redacted>"
+               cert: "<redacted>"
+               key: "<redacted>"
+     release: cf-syslog-drain
+   - name: log-cache-scheduler
+     release: log-cache
+   - name: log-cache-expvar-forwarder
+     properties:
+       counters: []
+       gauges: []
+       maps:
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+     release: log-cache
+   migrated_from:
+   - name: cc-bridge
+   - name: cc-clock
+   - name: diego-brain
+   name: scheduler
+   networks:
+   - name: default
+   stemcell: default
+   update:
+     serial: true
+   vm_type: minimal
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           services:
+             doppler:
+               name: "<redacted>"
+     release: consul
+   - name: doppler
+     properties:
+       loggregator:
+         tls:
+           ca_cert: "<redacted>"
+           doppler:
+             cert: "<redacted>"
+             key: "<redacted>"
+     provides:
+       doppler:
+         as: doppler
+         shared: true
+     release: loggregator
+   - name: log-cache
+     properties:
+       egress_port: "<redacted>"
+       health_addr: "<redacted>"
+       tls:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+     provides:
+       log-cache:
+         shared: true
+     release: log-cache
+   - name: log-cache-gateway
+     properties:
+       gateway_addr: "<redacted>"
+     release: log-cache
+   - name: log-cache-group-reader
+     properties:
+       port: "<redacted>"
+     release: log-cache
+   - consumes:
+       reverse_log_proxy:
+         from: reverse_log_proxy
+     name: log-cache-nozzle
+     properties:
+       logs_provider:
+         tls:
+           ca_cert: "<redacted>"
+           cert: "<redacted>"
+           key: "<redacted>"
+     release: log-cache
+   - name: log-cache-expvar-forwarder
+     properties:
+       counters:
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       gauges:
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       - addr: "<redacted>"
+         name: "<redacted>"
+         source_id: "<redacted>"
+         template: "<redacted>"
+       maps: []
+     release: log-cache
+   - name: route_registrar
+     properties:
+       route_registrar:
+         routes:
+         - name: "<redacted>"
+           port: "<redacted>"
+           registration_interval: "<redacted>"
+           uris:
+           - "<redacted>"
+           - "<redacted>"
+     release: routing
+   - name: log-cache-cf-auth-proxy
+     properties:
+       cc:
+         ca_cert: "<redacted>"
+         capi_internal_addr: "<redacted>"
+         cert: "<redacted>"
+         common_name: "<redacted>"
+         key: "<redacted>"
+       proxy_port: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         client_id: "<redacted>"
+         client_secret: "<redacted>"
+         internal_addr: "<redacted>"
+     release: log-cache
+   name: doppler
+   networks:
+   - name: default
+   stemcell: default
+   vm_type: minimal
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           node_name_includes_id: "<redacted>"
+     release: consul
+   - name: cflinuxfs2-rootfs-setup
+     properties:
+       cflinuxfs2-rootfs:
+         trusted_certs: "<redacted>"
+     release: cflinuxfs2
+   - name: garden
+     properties:
+       garden:
+         cleanup_process_dirs_on_wait: "<redacted>"
+         debug_listen_address: "<redacted>"
+         default_container_grace_time: "<redacted>"
+         deny_networks:
+         - "<redacted>"
+         destroy_containers_on_start: "<redacted>"
+         network_plugin: "<redacted>"
+         network_plugin_extra_args:
+         - "<redacted>"
+         persistent_image_list:
+         - "<redacted>"
+       grootfs:
+         reserved_space_for_other_jobs_in_mb: "<redacted>"
+       logging:
+         format:
+           timestamp: "<redacted>"
+     release: garden-runc
+   - name: rep
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       containers:
+         trusted_ca_certificates:
+         - "<redacted>"
+         - "<redacted>"
+         - "<redacted>"
+       diego:
+         executor:
+           instance_identity_ca_cert: "<redacted>"
+           instance_identity_key: "<redacted>"
+         rep:
+           evacuation_timeout_in_seconds: "<redacted>"
+           preloaded_rootfses:
+           - "<redacted>"
+       enable_declarative_healthcheck: "<redacted>"
+       logging:
+         format:
+           timestamp: "<redacted>"
+       loggregator:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+         use_v2_api: "<redacted>"
+       set_kernel_parameters: "<redacted>"
+       tls:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+     release: diego
+   - name: cfdot
+     properties:
+       tls:
+         ca_certificate: "<redacted>"
+         certificate: "<redacted>"
+         private_key: "<redacted>"
+     release: diego
+   - name: route_emitter
+     properties:
+       bpm:
+         enabled: "<redacted>"
+       diego:
+         route_emitter:
+           bbs:
+             ca_cert: "<redacted>"
+             client_cert: "<redacted>"
+             client_key: "<redacted>"
+           local_mode: "<redacted>"
+       logging:
+         format:
+           timestamp: "<redacted>"
+       loggregator:
+         ca_cert: "<redacted>"
+         cert: "<redacted>"
+         key: "<redacted>"
+         use_v2_api: "<redacted>"
+       tcp:
+         enabled: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         client_secret: "<redacted>"
+     release: diego
+   - name: garden-cni
+     properties:
+       cni_config_dir: "<redacted>"
+       cni_plugin_dir: "<redacted>"
+     release: cf-networking
+   - name: netmon
+     release: silk
+   - name: vxlan-policy-agent
+     properties:
+       ca_cert: "<redacted>"
+       client_cert: "<redacted>"
+       client_key: "<redacted>"
+     release: silk
+   - name: silk-daemon
+     properties:
+       ca_cert: "<redacted>"
+       client_cert: "<redacted>"
+       client_key: "<redacted>"
+     release: silk
+   - name: silk-cni
+     properties:
+       dns_servers:
+       - "<redacted>"
+     release: silk
+   name: diego-cell
+   networks:
+   - name: default
+   stemcell: default
+   vm_extensions:
+   - 100GB_ephemeral_disk
+   vm_type: small-highmem
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           services:
+             loggregator_trafficcontroller: {}
+             reverse_log_proxy: {}
+     release: consul
+   - consumes:
+       doppler:
+         from: doppler
+     name: loggregator_trafficcontroller
+     properties:
+       cc:
+         internal_service_hostname: "<redacted>"
+         mutual_tls:
+           ca_cert: "<redacted>"
+         tls_port: "<redacted>"
+       loggregator:
+         tls:
+           ca_cert: "<redacted>"
+           cc_trafficcontroller:
+             cert: "<redacted>"
+             key: "<redacted>"
+           trafficcontroller:
+             cert: "<redacted>"
+             key: "<redacted>"
+         uaa:
+           client_secret: "<redacted>"
+       ssl:
+         skip_cert_verify: "<redacted>"
+       system_domain: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         internal_url: "<redacted>"
+     release: loggregator
+   - name: reverse_log_proxy
+     properties:
+       loggregator:
+         tls:
+           ca_cert: "<redacted>"
+           reverse_log_proxy:
+             cert: "<redacted>"
+             key: "<redacted>"
+     provides:
+       reverse_log_proxy:
+         as: reverse_log_proxy
+         shared: true
+     release: loggregator
+   - name: reverse_log_proxy_gateway
+     properties:
+       cc:
+         ca_cert: "<redacted>"
+         capi_internal_addr: "<redacted>"
+         cert: "<redacted>"
+         common_name: "<redacted>"
+         key: "<redacted>"
+       http:
+         address: "<redacted>"
+       logs_provider:
+         ca_cert: "<redacted>"
+         client_cert: "<redacted>"
+         client_key: "<redacted>"
+       uaa:
+         ca_cert: "<redacted>"
+         client_id: "<redacted>"
+         client_secret: "<redacted>"
+         internal_addr: "<redacted>"
+     release: loggregator
+   - name: route_registrar
+     properties:
+       route_registrar:
+         routes:
+         - name: "<redacted>"
+           port: "<redacted>"
+           registration_interval: "<redacted>"
+           uris:
+           - "<redacted>"
+         - name: "<redacted>"
+           port: "<redacted>"
+           registration_interval: "<redacted>"
+           uris:
+           - "<redacted>"
+           - "<redacted>"
+         - name: "<redacted>"
+           port: "<redacted>"
+           registration_interval: "<redacted>"
+           uris:
+           - "<redacted>"
+           - "<redacted>"
+     release: routing
+   name: log-api
+   networks:
+   - name: default
+   stemcell: default
+   update:
+     serial: true
+   vm_type: minimal
+ - azs:
+   - z1
+   - z2
+   instances: 1
+   jobs:
+   - consumes:
+       consul_client:
+         from: consul_client_link
+       consul_common:
+         from: consul_common_link
+       consul_server: nil
+     name: consul_agent
+     properties:
+       consul:
+         agent:
+           services:
+             credhub: {}
+     release: consul
+   - name: credhub
+     properties:
+       credhub:
+         authentication:
+           mutual_tls:
+             trusted_cas:
+             - "<redacted>"
+           uaa:
+             ca_certs:
+             - "<redacted>"
+             url: "<redacted>"
+             verification_key: "<redacted>"
+         authorization:
+           acls:
+             enabled: "<redacted>"
+           permissions:
+           - actors:
+             - "<redacted>"
+             operations:
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             - "<redacted>"
+             path: "<redacted>"
+           - actors:
+             - "<redacted>"
+             operations:
+             - "<redacted>"
+             path: "<redacted>"
+         data_storage:
+           database: "<redacted>"
+           host: "<redacted>"
+           password: "<redacted>"
+           port: "<redacted>"
+           require_tls: "<redacted>"
+           type: "<redacted>"
+           username: "<redacted>"
+         encryption:
+           keys:
+           - active: "<redacted>"
+             key_properties:
+               encryption_password: "<redacted>"
+             provider_name: "<redacted>"
+           providers:
+           - name: "<redacted>"
+             type: "<redacted>"
+         tls: "<redacted>"
+     release: credhub
+   name: credhub
+   networks:
+   - name: default
+   stemcell: default
+   vm_type: minimal
+ - azs:
+   - z1
+   instances: 1
+   jobs:
+   - name: rotate_cc_database_key
+     properties: {}
+     release: capi
+   lifecycle: errand
+   name: rotate-cc-database-key
+   networks:
+   - name: default
+   stemcell: default
+   vm_type: minimal
  
+ manifest_version: v4.5.0
  
+ name: cf
Task 45

Task 45 | 05:08:49 | Preparing deployment: Preparing deployment (00:00:31)
Task 45 | 05:10:37 | Preparing package compilation: Finding packages to compile (00:00:01)
Task 45 | 05:10:38 | Updating instance consul: consul/c566cdcb-206d-4149-bf2c-2ea03a690d6f (0) (canary)